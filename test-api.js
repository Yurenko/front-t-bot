const API_BASE_URL = "http://localhost:3007";

async function testAPI() {
  try {
    console.log("üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API...");

    // –¢–µ—Å—Ç 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤–µ—Ä–∞
    console.log("\n1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Å–µ—Ä–≤–µ—Ä–∞...");
    const serverInfo = await fetch(`${API_BASE_URL}/trading/server-info`);
    if (serverInfo.ok) {
      const data = await serverInfo.json();
      console.log("‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–Ω–∏–π:", data);
    } else {
      console.log("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π");
      return;
    }

    // –¢–µ—Å—Ç 2: –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É
    console.log("\n2. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É...");
    const balanceResponse = await fetch(
      `${API_BASE_URL}/trading/total-balance`
    );
    if (balanceResponse.ok) {
      const balance = await balanceResponse.json();
      console.log("‚úÖ –ë–∞–ª–∞–Ω—Å –æ—Ç—Ä–∏–º–∞–Ω–æ:", balance);
    } else {
      console.log("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É:", balanceResponse.status);
    }

    // –¢–µ—Å—Ç 3: –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–µ—Å—ñ–π
    console.log("\n3. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–µ—Å—ñ–π...");
    const sessionsResponse = await fetch(`${API_BASE_URL}/trading/sessions`);
    if (sessionsResponse.ok) {
      const sessions = await sessionsResponse.json();
      console.log("‚úÖ –°–µ—Å—ñ—ó –æ—Ç—Ä–∏–º–∞–Ω–æ:", sessions.length, "—Å–µ—Å—ñ–π");
    } else {
      console.log("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–µ—Å—ñ–π:", sessionsResponse.status);
    }

    // –¢–µ—Å—Ç 4: –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–∏–º–≤–æ–ª—ñ–≤
    console.log("\n4. –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–∏–º–≤–æ–ª—ñ–≤...");
    const symbolsResponse = await fetch(
      `${API_BASE_URL}/trading/available-symbols`
    );
    if (symbolsResponse.ok) {
      const symbols = await symbolsResponse.json();
      console.log("‚úÖ –°–∏–º–≤–æ–ª–∏ –æ—Ç—Ä–∏–º–∞–Ω–æ:", symbols.length, "—Å–∏–º–≤–æ–ª—ñ–≤");
    } else {
      console.log("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–∏–º–≤–æ–ª—ñ–≤:", symbolsResponse.status);
    }
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è API:", error.message);
  }
}

testAPI();
